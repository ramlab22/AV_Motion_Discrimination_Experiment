function [xData_matrix, yData_matrix, x_matrix, p_matrix, fileNames] = extractdata_for_comboplot(folderPath,modality)
    %EXTRACTDATA Extracts data from .fig files generated by MATLAB.
    %
    %   [AUD_xData_matrix, AUD_yData_matrix, x_matrix, AUD_p_matrix, fileNames] = EXTRACTDATA(folderPath)
    %
    %   Inputs:
    %       folderPath - Path to the folder containing the .fig files.
    %       modality - 'aud', 'vis', or 'av'. which modality's data you
    %       want to extract from the figure
    %
    %   Outputs:
    %       AUD_xData_matrix - n x length(AUD_xData) matrix containing AUD_xData from all files.
    %       AUD_yData_matrix - n x length(AUD_yData) matrix containing AUD_yData from all files.
    %       x_matrix - n x length(x) matrix containing x data from all files.
    %       AUD_p_matrix - n x length(AUD_p) matrix containing AUD_p data from all files.
    %       fileNames - 1 x n cell containing an ordered list of all the .fig file names.
    %
    %   Example:
    %       [AUD_xData_matrix, AUD_yData_matrix, x_matrix, AUD_p_matrix, fileNames] = EXTRACTDATA('C:\path\to\your\folder');
    %

    % Get list of all .fig files in the specified folder
switch modality
    case 'aud'
        scatter_name='AUD';
        line_name='AUD - NormCDF';
    case 'vis'
        scatter_name='VIS';
        line_name='VIS - NormCDF';
    case 'av'
        scatter_name='AV_vis';
        line_name='AV_vis - NormCDF';
    case 'aud_only'
        scatter_name='% Rightward Resp. vs. Coherence';
        line_name='NormCDF';
end
    files = dir(fullfile(folderPath, '*.fig'));
    fileNames = {files.name};

    n = length(files); % Number of files

    % Initialize output variables (assuming maximum possible length of 30 for each data vector)
    xData_matrix = NaN(n, 30);
    yData_matrix = NaN(n, 30);
    x_matrix = NaN(n, 30);
    p_matrix = NaN(n, 30);

    for i = 1:n
        % Open the .fig file
        fig = openfig(fullfile(folderPath, files(i).name), 'invisible');
        
        % Get line and scatter objects
        lines = findall(fig, 'Type', 'line');
        scatters = findall(fig, 'Type', 'scatter');
        
        % Extract data from objects
        for j = 1:length(scatters)
            if strcmp(scatters(j).DisplayName, scatter_name) % Identifying AUD scatter based on name
                xData_matrix(i, 1:length(scatters(j).XData)) = scatters(j).XData;
                yData_matrix(i, 1:length(scatters(j).YData)) = scatters(j).YData;
            end
        end
        
        for j = 1:length(lines)
            if strcmp(lines(j).DisplayName, line_name) % Identifying AUD line based on name
                x_matrix(i, 1:length(lines(j).XData)) = lines(j).XData;
                p_matrix(i, 1:length(lines(j).YData)) = lines(j).YData;
            end
        end

        % Close the figure
        close(fig);
    end
end
